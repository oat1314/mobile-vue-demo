{"remainingRequest":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\babel-loader\\lib\\index.js??ref--29-1!F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\cube-ui\\src\\common\\helpers\\validator\\types.js","dependencies":[{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\cube-ui\\src\\common\\helpers\\validator\\types.js","mtime":499162500000},{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXMtYXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IiOwppbXBvcnQgeyBjcmVhdGVBZGRBUEkgfSBmcm9tICcuLi91dGlsJzsKdmFyIERBVEVfUkUgPSAvXigxfDIpXGR7M31bLlwtL11cZHsxLDJ9Wy5cLS9dXGR7MSwyfSQvOwp2YXIgdHlwZXMgPSB7CiAgc3RyaW5nOiBmdW5jdGlvbiBzdHJpbmcodmFsKSB7CiAgICByZXR1cm4gdHlwZW9mIHZhbCA9PT0gJ3N0cmluZyc7CiAgfSwKICBudW1iZXI6IGZ1bmN0aW9uIG51bWJlcih2YWwpIHsKICAgIHJldHVybiAhaXNOYU4oTnVtYmVyKHZhbCkpOwogIH0sCiAgYXJyYXk6IGZ1bmN0aW9uIGFycmF5KHZhbCkgewogICAgcmV0dXJuIEFycmF5LmlzQXJyYXkodmFsKTsKICB9LAogIGRhdGU6IGZ1bmN0aW9uIGRhdGUodmFsKSB7CiAgICByZXR1cm4gIWlzTmFOKE51bWJlcih2YWwpKSB8fCBEQVRFX1JFLnRlc3QodmFsKTsKICB9LAogIGVtYWlsOiBmdW5jdGlvbiBlbWFpbCh2YWwpIHsKICAgIHJldHVybiB0eXBlb2YgdmFsID09PSAnc3RyaW5nJyAmJiAvXlthLXowLTlfLV0rQFthLXowLTlfLV0rKFwuW2EtejAtOV8tXSspKyQvaS50ZXN0KHZhbCk7CiAgfSwKICB0ZWw6IGZ1bmN0aW9uIHRlbCh2YWwpIHsKICAgIHJldHVybiB0eXBlb2YgdmFsID09PSAnc3RyaW5nJyAmJiAvXigxMXwxM3wxNHwxNXwxN3wxOHwxOSlbMC05XXs5fSQvLnRlc3QodmFsKTsKICB9LAogIHVybDogZnVuY3Rpb24gdXJsKHZhbCkgewogICAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnICYmIC8oaHR0cHM/fGZ0cHxmaWxlKTpcL1wvWy1BLVphLXowLTkrJkAjLyU/PX5ffCE6LC47XStbLUEtWmEtejAtOSsmQCMvJT1+X3xdLy50ZXN0KHZhbCk7CiAgfQp9Owp2YXIgYWRkVHlwZSA9IGNyZWF0ZUFkZEFQSSh0eXBlcyk7CmV4cG9ydCB7IHR5cGVzLCBhZGRUeXBlIH07"},{"version":3,"sources":["F:/BaiduNetdiskDownload/思否/20年spring boot+vue课程源码/课程源码/00-前端-后端代码-数据库/xdclass_front/node_modules/cube-ui/src/common/helpers/validator/types.js"],"names":["createAddAPI","DATE_RE","types","string","val","number","isNaN","Number","array","Array","isArray","date","test","email","tel","url","addType"],"mappings":";;AAAA,SAASA,YAAT,QAA6B,SAA7B;AAEA,IAAMC,OAAO,GAAG,wCAAhB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE,gBAACC,GAAD,EAAS;AACf,WAAO,OAAOA,GAAP,KAAe,QAAtB;AACD,GAHW;AAIZC,EAAAA,MAAM,EAAE,gBAACD,GAAD,EAAS;AACf,WAAO,CAACE,KAAK,CAACC,MAAM,CAACH,GAAD,CAAP,CAAb;AACD,GANW;AAOZI,EAAAA,KAAK,EAAE,eAACJ,GAAD,EAAS;AACd,WAAOK,KAAK,CAACC,OAAN,CAAcN,GAAd,CAAP;AACD,GATW;AAUZO,EAAAA,IAAI,EAAE,cAACP,GAAD,EAAS;AACb,WAAO,CAACE,KAAK,CAACC,MAAM,CAACH,GAAD,CAAP,CAAN,IAAuBH,OAAO,CAACW,IAAR,CAAaR,GAAb,CAA9B;AACD,GAZW;AAaZS,EAAAA,KAAK,EAAE,eAACT,GAAD,EAAS;AACd,WAAO,OAAOA,GAAP,KAAe,QAAf,IAA2B,6CAA6CQ,IAA7C,CAAkDR,GAAlD,CAAlC;AACD,GAfW;AAgBZU,EAAAA,GAAG,EAAE,aAACV,GAAD,EAAS;AACZ,WAAO,OAAOA,GAAP,KAAe,QAAf,IAA2B,mCAAmCQ,IAAnC,CAAwCR,GAAxC,CAAlC;AACD,GAlBW;AAmBZW,EAAAA,GAAG,EAAE,aAACX,GAAD,EAAS;AACZ,WAAO,OAAOA,GAAP,KAAe,QAAf,IAA2B,4EAA4EQ,IAA5E,CAAiFR,GAAjF,CAAlC;AACD;AArBW,CAAd;AAwBA,IAAMY,OAAO,GAAGhB,YAAY,CAACE,KAAD,CAA5B;AAEA,SAASA,KAAT,EAAgBc,OAAhB","sourcesContent":["import { createAddAPI } from '../util'\n\nconst DATE_RE = /^(1|2)\\d{3}[.\\-/]\\d{1,2}[.\\-/]\\d{1,2}$/\n\nconst types = {\n  string: (val) => {\n    return typeof val === 'string'\n  },\n  number: (val) => {\n    return !isNaN(Number(val))\n  },\n  array: (val) => {\n    return Array.isArray(val)\n  },\n  date: (val) => {\n    return !isNaN(Number(val)) || DATE_RE.test(val)\n  },\n  email: (val) => {\n    return typeof val === 'string' && /^[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)+$/i.test(val)\n  },\n  tel: (val) => {\n    return typeof val === 'string' && /^(11|13|14|15|17|18|19)[0-9]{9}$/.test(val)\n  },\n  url: (val) => {\n    return typeof val === 'string' && /(https?|ftp|file):\\/\\/[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]/.test(val)\n  }\n}\n\nconst addType = createAddAPI(types)\n\nexport { types, addType }\n"]}]}