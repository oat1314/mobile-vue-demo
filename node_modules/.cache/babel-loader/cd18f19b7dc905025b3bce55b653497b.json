{"remainingRequest":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\babel-loader\\lib\\index.js??ref--16-1!F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\cube-ui\\src\\components\\validator\\validator.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\cube-ui\\src\\components\\validator\\validator.vue","mtime":499162500000},{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgX3R5cGVvZiBmcm9tICJGOlxcQmFpZHVOZXRkaXNrRG93bmxvYWRcXFx1NjAxRFx1NTQyNlxcMjBcdTVFNzRzcHJpbmcgYm9vdCt2dWVcdThCRkVcdTdBMEJcdTZFOTBcdTc4MDFcXFx1OEJGRVx1N0EwQlx1NkU5MFx1NzgwMVxcMDAtXHU1MjREXHU3QUVGLVx1NTQwRVx1N0FFRlx1NEVFM1x1NzgwMS1cdTY1NzBcdTYzNkVcdTVFOTNcXHhkY2xhc3NfZnJvbnRcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL3R5cGVvZiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IHBhcmFsbGVsLCBjYjJQcm9taXNlV2l0aFJlc29sdmUsIGlzVW5kZWYsIGlzRnVuYywgaXNTdHJpbmcsIGlzQXJyYXkgfSBmcm9tICcuLi8uLi9jb21tb24vaGVscGVycy91dGlsJzsKaW1wb3J0IHsgcnVsZXMgfSBmcm9tICcuLi8uLi9jb21tb24vaGVscGVycy92YWxpZGF0b3InOwppbXBvcnQgbG9jYWxlTWl4aW4gZnJvbSAnLi4vLi4vY29tbW9uL21peGlucy9sb2NhbGUnOwppbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi4vLi4vY29tbW9uL2hlbHBlcnMvc3RyaW5nLXRlbXBsYXRlJzsKdmFyIENPTVBPTkVOVF9OQU1FID0gJ2N1YmUtdmFsaWRhdG9yJzsKdmFyIEVWRU5UX0lOUFVUID0gJ2lucHV0JzsKdmFyIEVWRU5UX1ZBTElEQVRJTkcgPSAndmFsaWRhdGluZyc7CnZhciBFVkVOVF9WQUxJREFURUQgPSAndmFsaWRhdGVkJzsKdmFyIEVWRU5UX01TR19DTElDSyA9ICdtc2ctY2xpY2snOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogQ09NUE9ORU5UX05BTUUsCiAgbWl4aW5zOiBbbG9jYWxlTWl4aW5dLAogIHByb3BzOiB7CiAgICBtb2RlbDogewogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIG1vZGVsS2V5OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgImRlZmF1bHQiOiAnJwogICAgfSwKICAgIHJ1bGVzOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgImRlZmF1bHQiOiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4ge307CiAgICAgIH0KICAgIH0sCiAgICBtZXNzYWdlczogewogICAgICB0eXBlOiBbT2JqZWN0LCBTdHJpbmddLAogICAgICAiZGVmYXVsdCI6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfSwKICAgIHZhbHVlOiB7fSwKICAgIGRpc2FibGVkOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgICJkZWZhdWx0IjogZmFsc2UKICAgIH0sCiAgICBpbW1lZGlhdGU6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgImRlZmF1bHQiOiBmYWxzZQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHZhbGlkOiB0aGlzLnZhbHVlLAogICAgICB2YWxpZGF0ZWQ6IGZhbHNlLAogICAgICBtc2c6ICcnLAogICAgICBkaXJ0eTogZmFsc2UsCiAgICAgIHZhbGlkYXRpbmc6IGZhbHNlLAogICAgICByZXN1bHQ6IHt9CiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHRhcmdldE1vZGVsOiBmdW5jdGlvbiB0YXJnZXRNb2RlbCgpIHsKICAgICAgdmFyIG1vZGVsS2V5ID0gdGhpcy5tb2RlbEtleTsKICAgICAgdmFyIG1vZGVsID0gdGhpcy5tb2RlbDsKICAgICAgcmV0dXJuIG1vZGVsS2V5ID8gbW9kZWxbbW9kZWxLZXldIDogbW9kZWw7CiAgICB9LAogICAgaW52YWxpZDogZnVuY3Rpb24gaW52YWxpZCgpIHsKICAgICAgdmFyIHZhbGlkID0gdGhpcy52YWxpZDsKICAgICAgcmV0dXJuIGlzVW5kZWYodmFsaWQpID8gdW5kZWZpbmVkIDogIXZhbGlkOwogICAgfSwKICAgIGlzRGlzYWJsZWQ6IGZ1bmN0aW9uIGlzRGlzYWJsZWQoKSB7CiAgICAgIHZhciBkaXNhYmxlZCA9IHRoaXMuZGlzYWJsZWQ7CiAgICAgIHZhciBub1J1bGVzID0gT2JqZWN0LmtleXModGhpcy5ydWxlcykubGVuZ3RoIDw9IDA7CiAgICAgIHJldHVybiBkaXNhYmxlZCB8fCBub1J1bGVzOwogICAgfSwKICAgIGRpcnR5T3JWYWxpZGF0ZWQ6IGZ1bmN0aW9uIGRpcnR5T3JWYWxpZGF0ZWQoKSB7CiAgICAgIHJldHVybiAodGhpcy5kaXJ0eSB8fCB0aGlzLnZhbGlkYXRlZCkgJiYgIXRoaXMudmFsaWRhdGluZzsKICAgIH0sCiAgICBjb250YWluZXJDbGFzczogZnVuY3Rpb24gY29udGFpbmVyQ2xhc3MoKSB7CiAgICAgIHZhciBkaXNhYmxlZCA9IHRoaXMuaXNEaXNhYmxlZDsKCiAgICAgIGlmIChkaXNhYmxlZCkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgcmV0dXJuIHsKICAgICAgICAnY3ViZS12YWxpZGF0b3JfaW52YWxpZCc6IHRoaXMuaW52YWxpZCwKICAgICAgICAnY3ViZS12YWxpZGF0b3JfdmFsaWQnOiB0aGlzLnZhbGlkLAogICAgICAgICdjdWJlLXZhbGlkYXRvcl92YWxpZGF0aW5nJzogdGhpcy52YWxpZGF0aW5nCiAgICAgIH07CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgdmFsdWU6IGZ1bmN0aW9uIHZhbHVlKG5ld1ZhbCkgewogICAgICB0aGlzLnZhbGlkID0gbmV3VmFsOwogICAgfSwKICAgIHRhcmdldE1vZGVsOiB7CiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIoKSB7CiAgICAgICAgaWYgKHRoaXMuaXNEaXNhYmxlZCkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgaWYgKCF0aGlzLmRpcnR5KSB7CiAgICAgICAgICB0aGlzLmRpcnR5ID0gdHJ1ZTsKICAgICAgICB9CgogICAgICAgIHRoaXMudmFsaWRhdGUoKTsKICAgICAgfSwKICAgICAgc3luYzogdHJ1ZQogICAgfSwKICAgIHJ1bGVzOiBmdW5jdGlvbiBydWxlcygpIHsKICAgICAgdGhpcy52YWxpZGF0ZSgpOwogICAgfSwKICAgIGlzRGlzYWJsZWQ6IGZ1bmN0aW9uIGlzRGlzYWJsZWQobmV3VmFsKSB7CiAgICAgIGlmICghbmV3VmFsICYmIHRoaXMudHJpZ2dlciAmJiAhdGhpcy52YWxpZGF0ZWQpIHsKICAgICAgICB0aGlzLnZhbGlkYXRlKCk7CiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLl92YWxpZGF0ZUNvdW50ID0gMDsKCiAgICBpZiAoIXRoaXMuaXNEaXNhYmxlZCAmJiB0aGlzLmltbWVkaWF0ZSkgewogICAgICB0aGlzLnZhbGlkYXRlKCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICB2YWxpZGF0ZTogZnVuY3Rpb24gdmFsaWRhdGUoY2IpIHsKICAgICAgdmFyIHByb21pc2UgPSBjYjJQcm9taXNlV2l0aFJlc29sdmUoY2IpOwoKICAgICAgaWYgKHByb21pc2UpIHsKICAgICAgICBjYiA9IHByb21pc2UucmVzb2x2ZTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuaXNEaXNhYmxlZCkgewogICAgICAgIGNiICYmIGNiKHRoaXMudmFsaWQpOwogICAgICAgIHJldHVybiBwcm9taXNlOwogICAgICB9CgogICAgICB0aGlzLl92YWxpZGF0ZUNvdW50Kys7CiAgICAgIHZhciB2YWxpZGF0ZUNvdW50ID0gdGhpcy5fdmFsaWRhdGVDb3VudDsKICAgICAgdmFyIHZhbCA9IHRoaXMudGFyZ2V0TW9kZWw7CiAgICAgIHZhciBjb25maWdSdWxlcyA9IHRoaXMucnVsZXM7CiAgICAgIHZhciB0eXBlID0gY29uZmlnUnVsZXMudHlwZTsKICAgICAgdmFyIGFsbFRhc2tzID0gW107CiAgICAgIHZhciByZXF1aXJlZFZhbGlkID0gdHJ1ZTsKCiAgICAgIGlmICghY29uZmlnUnVsZXMucmVxdWlyZWQpIHsKICAgICAgICAvLyB0cmVhdCBpdCBhcyBlbXB0eSwgbm8gbmVlZCB0byB2YWxpZGF0ZSBvdGhlciBydWxlcwogICAgICAgIHJlcXVpcmVkVmFsaWQgPSBydWxlcy5yZXF1aXJlZCh2YWwsIHRydWUsIHR5cGUpOwogICAgICB9CgogICAgICBpZiAocmVxdWlyZWRWYWxpZCkgewogICAgICAgIHZhciBfbG9vcCA9IGZ1bmN0aW9uIF9sb29wKGtleSkgewogICAgICAgICAgdmFyIHJ1bGVWYWx1ZSA9IGNvbmZpZ1J1bGVzW2tleV07CiAgICAgICAgICB2YXIgcmV0ID0gdm9pZCAwOwoKICAgICAgICAgIGlmIChpc0Z1bmMocnVsZVZhbHVlKSkgewogICAgICAgICAgICByZXQgPSBydWxlVmFsdWUodmFsLCBjb25maWdSdWxlc1trZXldLCB0eXBlKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldCA9ICFydWxlc1trZXldIHx8IHJ1bGVzW2tleV0odmFsLCBjb25maWdSdWxlc1trZXldLCB0eXBlKTsKICAgICAgICAgIH0KCiAgICAgICAgICBhbGxUYXNrcy5wdXNoKGZ1bmN0aW9uIChuZXh0KSB7CiAgICAgICAgICAgIHZhciByZXNvbHZlID0gZnVuY3Rpb24gcmVzb2x2ZShfcmV0KSB7CiAgICAgICAgICAgICAgbmV4dCh7CiAgICAgICAgICAgICAgICBrZXk6IGtleSwKICAgICAgICAgICAgICAgIHZhbGlkOiBfcmV0ID09PSB0cnVlLAogICAgICAgICAgICAgICAgcmV0OiBfcmV0CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH07CgogICAgICAgICAgICB2YXIgcmVqZWN0ID0gZnVuY3Rpb24gcmVqZWN0KGVycikgewogICAgICAgICAgICAgIG5leHQoewogICAgICAgICAgICAgICAga2V5OiBrZXksCiAgICAgICAgICAgICAgICB2YWxpZDogZmFsc2UsCiAgICAgICAgICAgICAgICByZXQ6IGVycgogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9OwoKICAgICAgICAgICAgaWYgKF90eXBlb2YocmV0KSA9PT0gJ29iamVjdCcgJiYgaXNGdW5jKHJldC50aGVuKSkgewogICAgICAgICAgICAgIHJldC50aGVuKHJlc29sdmUpWyJjYXRjaCJdKHJlamVjdCk7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoaXNGdW5jKHJldCkpIHsKICAgICAgICAgICAgICByZXQocmVzb2x2ZSwgcmVqZWN0KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBuZXh0KHsKICAgICAgICAgICAgICAgIGtleToga2V5LAogICAgICAgICAgICAgICAgdmFsaWQ6IHJldCA9PT0gdHJ1ZSwKICAgICAgICAgICAgICAgIHJldDogcmV0CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH07CgogICAgICAgIGZvciAodmFyIGtleSBpbiBjb25maWdSdWxlcykgewogICAgICAgICAgX2xvb3Aoa2V5KTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHRoaXMuX2NoZWNrVGFza3MoYWxsVGFza3MsIHZhbGlkYXRlQ291bnQsIGNiKTsKCiAgICAgIHJldHVybiBwcm9taXNlOwogICAgfSwKICAgIF9jaGVja1Rhc2tzOiBmdW5jdGlvbiBfY2hlY2tUYXNrcyhhbGxUYXNrcywgdmFsaWRhdGVDb3VudCwgY2IpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBjb25maWdSdWxlcyA9IHRoaXMucnVsZXM7CiAgICAgIHZhciBpc1ZhbGlkID0gdHJ1ZTsKICAgICAgdmFyIHJlc3VsdCA9IHt9OwogICAgICB2YXIgc3luYyA9IHRydWU7CiAgICAgIHRoaXMudmFsaWRhdGluZyA9IHRydWU7CiAgICAgIHZhciBtb2RlbCA9IHRoaXMudGFyZ2V0TW9kZWw7CiAgICAgIHBhcmFsbGVsKGFsbFRhc2tzLCBmdW5jdGlvbiAocmVzdWx0cykgewogICAgICAgIGlmIChfdGhpcy5fdmFsaWRhdGVDb3VudCAhPT0gdmFsaWRhdGVDb3VudCkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgX3RoaXMudmFsaWRhdGluZyA9IGZhbHNlOwogICAgICAgIHJlc3VsdHMuZm9yRWFjaChmdW5jdGlvbiAoX3JlZikgewogICAgICAgICAgdmFyIGtleSA9IF9yZWYua2V5LAogICAgICAgICAgICAgIHZhbGlkID0gX3JlZi52YWxpZCwKICAgICAgICAgICAgICByZXQgPSBfcmVmLnJldDsKICAgICAgICAgIHZhciBtc2cgPSBfdGhpcy5tZXNzYWdlc1trZXldID8gaXNGdW5jKF90aGlzLm1lc3NhZ2VzW2tleV0pID8gX3RoaXMubWVzc2FnZXNba2V5XShyZXQsIHZhbGlkKSA6IF90aGlzLm1lc3NhZ2VzW2tleV0gOiBfdGhpcy5maW5kTWVzc2FnZShrZXksIGNvbmZpZ1J1bGVzW2tleV0sIGNvbmZpZ1J1bGVzLnR5cGUsIG1vZGVsKTsKCiAgICAgICAgICBpZiAoaXNWYWxpZCAmJiAhdmFsaWQpIHsKICAgICAgICAgICAgaXNWYWxpZCA9IGZhbHNlOwogICAgICAgICAgICBfdGhpcy5tc2cgPSBtc2c7CiAgICAgICAgICB9CgogICAgICAgICAgcmVzdWx0W2tleV0gPSB7CiAgICAgICAgICAgIHZhbGlkOiB2YWxpZCwKICAgICAgICAgICAgaW52YWxpZDogIXZhbGlkLAogICAgICAgICAgICBtZXNzYWdlOiBtc2cKICAgICAgICAgIH07CiAgICAgICAgfSk7CgogICAgICAgIGlmICghc3luYykgewogICAgICAgICAgX3RoaXMuJGVtaXQoRVZFTlRfVkFMSURBVEVELCBpc1ZhbGlkKTsKICAgICAgICB9CgogICAgICAgIF90aGlzLl91cGRhdGVNb2RlbChpc1ZhbGlkLCByZXN1bHQpOwoKICAgICAgICBjYiAmJiBjYihfdGhpcy52YWxpZCk7CiAgICAgIH0pOwoKICAgICAgaWYgKHRoaXMudmFsaWRhdGluZykgewogICAgICAgIHN5bmMgPSBmYWxzZTsgLy8gb25seSBhc3luYyB2YWxpZGF0ZSB0cmlnZ2VyIHZhbGlkYXRpbmcKCiAgICAgICAgdGhpcy4kZW1pdChFVkVOVF9WQUxJREFUSU5HKTsKICAgICAgICB0aGlzLnZhbGlkID0gdW5kZWZpbmVkOwogICAgICAgIHRoaXMuJGVtaXQoRVZFTlRfSU5QVVQsIHRoaXMudmFsaWQpOwogICAgICB9CiAgICB9LAogICAgX3VwZGF0ZU1vZGVsOiBmdW5jdGlvbiBfdXBkYXRlTW9kZWwodmFsaWQsIHJlc3VsdCkgewogICAgICB0aGlzLnZhbGlkYXRlZCA9IHRydWU7CiAgICAgIHRoaXMucmVzdWx0ID0gcmVzdWx0OwoKICAgICAgaWYgKHJlc3VsdC5yZXF1aXJlZCAmJiByZXN1bHQucmVxdWlyZWQuaW52YWxpZCkgewogICAgICAgIC8vIHJlcXVpcmVkCiAgICAgICAgdGhpcy5tc2cgPSByZXN1bHQucmVxdWlyZWQubWVzc2FnZTsKICAgICAgfQoKICAgICAgaWYgKHZhbGlkKSB7CiAgICAgICAgdGhpcy5tc2cgPSAnJzsKICAgICAgfQoKICAgICAgdGhpcy52YWxpZCA9IHZhbGlkOwogICAgICB0aGlzLiRlbWl0KEVWRU5UX0lOUFVULCB0aGlzLnZhbGlkKTsKICAgIH0sCiAgICByZXNldDogZnVuY3Rpb24gcmVzZXQoKSB7CiAgICAgIHRoaXMuX3ZhbGlkYXRlQ291bnQrKzsKICAgICAgdGhpcy52YWxpZGF0aW5nID0gZmFsc2U7CiAgICAgIHRoaXMuZGlydHkgPSBmYWxzZTsKICAgICAgdGhpcy5yZXN1bHQgPSB7fTsKICAgICAgdGhpcy5tc2cgPSAnJzsKICAgICAgdGhpcy52YWxpZGF0ZWQgPSBmYWxzZTsKICAgICAgdGhpcy52YWxpZCA9IHVuZGVmaW5lZDsKICAgICAgdGhpcy4kZW1pdChFVkVOVF9JTlBVVCwgdGhpcy52YWxpZCk7CiAgICB9LAogICAgbXNnQ2xpY2tIYW5kbGVyOiBmdW5jdGlvbiBtc2dDbGlja0hhbmRsZXIoKSB7CiAgICAgIHRoaXMuJGVtaXQoRVZFTlRfTVNHX0NMSUNLKTsKICAgIH0sCiAgICBmaW5kTWVzc2FnZTogZnVuY3Rpb24gZmluZE1lc3NhZ2Uoa2V5LCBjb25maWcsIHR5cGUsIHZhbCkgewogICAgICB2YXIgbWVzc2FnZXMgPSB0aGlzLiRjdWJlTWVzc2FnZXM7CiAgICAgIHZhciBsYW5nID0gdGhpcy4kY3ViZUxhbmc7CiAgICAgIHZhciBOQU1FU1BBQ0UgPSAndmFsaWRhdG9yJzsKICAgICAgdmFyIHRhcmdldCA9IG1lc3NhZ2VzW2xhbmddW05BTUVTUEFDRV1ba2V5XTsKCiAgICAgIGlmICghdGFyZ2V0KSB7CiAgICAgICAgcmV0dXJuICcnOwogICAgICB9CgogICAgICBpZiAoaXNTdHJpbmcodGFyZ2V0KSkgewogICAgICAgIHJldHVybiB0YXJnZXQ7CiAgICAgIH0gZWxzZSBpZiAoaXNGdW5jKHRhcmdldCkpIHsKICAgICAgICByZXR1cm4gdGFyZ2V0KGNvbmZpZyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKCF0YXJnZXRbdHlwZV0pIHsKICAgICAgICAgIHR5cGUgPSBpc0FycmF5KHZhbCkgPyAnYXJyYXknIDogX3R5cGVvZih2YWwpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHR5cGVvZiB0YXJnZXRbdHlwZV0gPT09ICdmdW5jdGlvbicgPyB0YXJnZXRbdHlwZV0oY29uZmlnKSA6IHRlbXBsYXRlKHRhcmdldFt0eXBlXSwgY29uZmlnKTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["validator.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"cube-validator\" :class=\"containerClass\">\n    <div class=\"cube-validator-content\">\n      <slot></slot>\n    </div>\n    <div class=\"cube-validator-msg\" @click=\"msgClickHandler\">\n      <slot\n        name=\"message\"\n        :message=\"msg\"\n        :dirty=\"dirty\"\n        :validated=\"validated\"\n        :validating=\"validating\"\n        :result=\"result\"\n      >\n        <span class=\"cube-validator-msg-def\">{{ dirtyOrValidated ? msg : '' }}</span>\n      </slot>\n    </div>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import { parallel, cb2PromiseWithResolve, isUndef, isFunc, isString, isArray } from '../../common/helpers/util'\n  import { rules } from '../../common/helpers/validator'\n  import localeMixin from '../../common/mixins/locale'\n  import template from '../../common/helpers/string-template'\n\n  const COMPONENT_NAME = 'cube-validator'\n  const EVENT_INPUT = 'input'\n  const EVENT_VALIDATING = 'validating'\n  const EVENT_VALIDATED = 'validated'\n  const EVENT_MSG_CLICK = 'msg-click'\n\n  export default {\n    name: COMPONENT_NAME,\n    mixins: [localeMixin],\n    props: {\n      model: {\n        required: true\n      },\n      modelKey: {\n        type: String,\n        default: ''\n      },\n      rules: {\n        type: Object,\n        default() {\n          return {}\n        }\n      },\n      messages: {\n        type: [Object, String],\n        default() {\n          return {}\n        }\n      },\n      value: {},\n      disabled: {\n        type: Boolean,\n        default: false\n      },\n      immediate: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data() {\n      return {\n        valid: this.value,\n        validated: false,\n        msg: '',\n        dirty: false,\n        validating: false,\n        result: {}\n      }\n    },\n    computed: {\n      targetModel() {\n        const modelKey = this.modelKey\n        const model = this.model\n        return modelKey ? model[modelKey] : model\n      },\n      invalid() {\n        const valid = this.valid\n        return isUndef(valid) ? undefined : !valid\n      },\n      isDisabled() {\n        const disabled = this.disabled\n        const noRules = Object.keys(this.rules).length <= 0\n        return disabled || noRules\n      },\n      dirtyOrValidated() {\n        return (this.dirty || this.validated) && !this.validating\n      },\n      containerClass() {\n        const disabled = this.isDisabled\n        if (disabled) {\n          return\n        }\n        return {\n          'cube-validator_invalid': this.invalid,\n          'cube-validator_valid': this.valid,\n          'cube-validator_validating': this.validating\n        }\n      }\n    },\n    watch: {\n      value(newVal) {\n        this.valid = newVal\n      },\n      targetModel: {\n        handler() {\n          if (this.isDisabled) {\n            return\n          }\n          if (!this.dirty) {\n            this.dirty = true\n          }\n\n          this.validate()\n        },\n        sync: true\n      },\n      rules() {\n        this.validate()\n      },\n      isDisabled(newVal) {\n        if (!newVal && this.trigger && !this.validated) {\n          this.validate()\n        }\n      }\n    },\n    created() {\n      this._validateCount = 0\n      if (!this.isDisabled && this.immediate) {\n        this.validate()\n      }\n    },\n    methods: {\n      validate(cb) {\n        const promise = cb2PromiseWithResolve(cb)\n        if (promise) {\n          cb = promise.resolve\n        }\n        if (this.isDisabled) {\n          cb && cb(this.valid)\n          return promise\n        }\n        this._validateCount++\n        const validateCount = this._validateCount\n        const val = this.targetModel\n\n        const configRules = this.rules\n        const type = configRules.type\n        const allTasks = []\n\n        let requiredValid = true\n        if (!configRules.required) {\n          // treat it as empty, no need to validate other rules\n          requiredValid = rules.required(val, true, type)\n        }\n\n        if (requiredValid) {\n          for (const key in configRules) {\n            const ruleValue = configRules[key]\n            let ret\n            if (isFunc(ruleValue)) {\n              ret = ruleValue(val, configRules[key], type)\n            } else {\n              ret = !rules[key] || rules[key](val, configRules[key], type)\n            }\n            allTasks.push((next) => {\n              const resolve = (_ret) => {\n                next({\n                  key: key,\n                  valid: _ret === true,\n                  ret: _ret\n                })\n              }\n              const reject = (err) => {\n                next({\n                  key: key,\n                  valid: false,\n                  ret: err\n                })\n              }\n              if (typeof ret === 'object' && isFunc(ret.then)) {\n                ret.then(resolve).catch(reject)\n              } else if (isFunc(ret)) {\n                ret(resolve, reject)\n              } else {\n                next({\n                  key: key,\n                  valid: ret === true,\n                  ret: ret\n                })\n              }\n            })\n          }\n        }\n        this._checkTasks(allTasks, validateCount, cb)\n        return promise\n      },\n      _checkTasks(allTasks, validateCount, cb) {\n        const configRules = this.rules\n        let isValid = true\n        const result = {}\n        let sync = true\n        this.validating = true\n        const model = this.targetModel\n        parallel(allTasks, (results) => {\n          if (this._validateCount !== validateCount) {\n            return\n          }\n          this.validating = false\n          results.forEach(({ key, valid, ret }) => {\n            const msg = this.messages[key]\n              ? isFunc(this.messages[key])\n                ? this.messages[key](ret, valid)\n                : this.messages[key]\n              : this.findMessage(key, configRules[key], configRules.type, model)\n            if (isValid && !valid) {\n              isValid = false\n              this.msg = msg\n            }\n            result[key] = {\n              valid: valid,\n              invalid: !valid,\n              message: msg\n            }\n          })\n          if (!sync) {\n            this.$emit(EVENT_VALIDATED, isValid)\n          }\n          this._updateModel(isValid, result)\n          cb && cb(this.valid)\n        })\n        if (this.validating) {\n          sync = false\n          // only async validate trigger validating\n          this.$emit(EVENT_VALIDATING)\n          this.valid = undefined\n          this.$emit(EVENT_INPUT, this.valid)\n        }\n      },\n      _updateModel(valid, result) {\n        this.validated = true\n        this.result = result\n        if (result.required && result.required.invalid) {\n          // required\n          this.msg = result.required.message\n        }\n\n        if (valid) {\n          this.msg = ''\n        }\n        this.valid = valid\n        this.$emit(EVENT_INPUT, this.valid)\n      },\n      reset() {\n        this._validateCount++\n        this.validating = false\n        this.dirty = false\n        this.result = {}\n        this.msg = ''\n        this.validated = false\n        this.valid = undefined\n        this.$emit(EVENT_INPUT, this.valid)\n      },\n      msgClickHandler() {\n        this.$emit(EVENT_MSG_CLICK)\n      },\n      findMessage (key, config, type, val) {\n        const messages = this.$cubeMessages\n        const lang = this.$cubeLang\n        const NAMESPACE = 'validator'\n        const target = messages[lang][NAMESPACE][key]\n        if (!target) {\n          return ''\n        }\n        if (isString(target)) {\n          return target\n        } else if (isFunc(target)) {\n          return target(config)\n        } else {\n          if (!target[type]) {\n            type = isArray(val) ? 'array' : typeof val\n          }\n          return typeof target[type] === 'function' ? target[type](config) : template(target[type], config)\n        }\n      }\n    }\n  }\n</script>\n\n<style lang=\"stylus\">\n  @require \"../../common/stylus/variable.styl\"\n\n  .cube-validator\n    .cube-checkbox, .cube-radio\n      color: inherit\n    .cube-input\n      input\n        color: inherit\n    .cube-textarea\n      color: inherit\n    .cube-select\n      color: inherit\n  .cube-validator-msg-def\n    font-size: $fontsize-medium\n    color: $validator-msg-def-color\n</style>\n"],"sourceRoot":"node_modules/cube-ui/src/components/validator"}]}