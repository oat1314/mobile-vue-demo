{"remainingRequest":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\cube-ui\\src\\components\\form\\form-item.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\cube-ui\\src\\components\\form\\form-item.vue","mtime":499162500000},{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHByb2Nlc3NGaWVsZCB9IGZyb20gJy4vZmllbGRzL2luZGV4JwppbXBvcnQgeyByZXNldFR5cGVWYWx1ZSwgY2IyUHJvbWlzZVdpdGhSZXNvbHZlLCBkZWJvdW5jZSB9IGZyb20gJy4uLy4uL2NvbW1vbi9oZWxwZXJzL3V0aWwnCmltcG9ydCBDdWJlVmFsaWRhdG9yIGZyb20gJy4uL3ZhbGlkYXRvci92YWxpZGF0b3IudnVlJwppbXBvcnQgTEFZT1VUUyBmcm9tICcuL2xheW91dHMnCmltcG9ydCB7IGdldFJlc2V0VmFsdWVCeVR5cGUgfSBmcm9tICcuL2ZpZWxkcy9yZXNldCcKaW1wb3J0IG1peGluIGZyb20gJy4vbWl4aW4nCmltcG9ydCBjb21wb25lbnRzIGZyb20gJy4vY29tcG9uZW50cycKY29tcG9uZW50cy5DdWJlVmFsaWRhdG9yID0gQ3ViZVZhbGlkYXRvcgoKY29uc3QgQ09NUE9ORU5UX05BTUUgPSAnY3ViZS1mb3JtLWl0ZW0nCmNvbnN0IEVWRU5UX0ZPQ1VTSU4gPSAnZm9jdXNpbicKY29uc3QgRVZFTlRfRk9DVVNPVVQgPSAnZm9jdXNvdXQnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogQ09NUE9ORU5UX05BTUUsCiAgbWl4aW5zOiBbbWl4aW5dLAogIHByb3BzOiB7CiAgICBmaWVsZDogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQoKSB7CiAgICAgICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi8KICAgICAgICByZXR1cm4ge30KICAgICAgfQogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIGNvbnN0IHZhbGlkYXRvck1vZGVsS2V5ID0gJ3ZhbHVlJwogICAgY29uc3QgbW9kZWxLZXkgPSB0aGlzLmZpZWxkLm1vZGVsS2V5CiAgICBjb25zdCBtb2RlbFZhbHVlID0gbW9kZWxLZXkgPyB0aGlzLmZvcm0ubW9kZWxbbW9kZWxLZXldIDogbnVsbAogICAgcmV0dXJuIHsKICAgICAgdmFsaWRhdG9yRGlzYWJsZWQ6IGZhbHNlLAogICAgICB2YWxpZGF0b3JNb2RlbEtleSwKICAgICAgbW9kZWxWYWx1ZTogbW9kZWxWYWx1ZSwKICAgICAgdmFsaWRhdG9yTW9kZWw6IHsKICAgICAgICBbdmFsaWRhdG9yTW9kZWxLZXldOiBtb2RlbFZhbHVlCiAgICAgIH0KICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBmaWVsZFZhbHVlKCkgewogICAgICByZXR1cm4gcHJvY2Vzc0ZpZWxkKHRoaXMuZmllbGQpCiAgICB9LAogICAgaGFzUnVsZXMoKSB7CiAgICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLmZpZWxkVmFsdWUucnVsZXMgfHwge30pLmxlbmd0aCA+IDAKICAgIH0sCiAgICBpc0J0bkZpZWxkKCkgewogICAgICByZXR1cm4gdGhpcy5maWVsZFZhbHVlLnR5cGUgPT09ICdidXR0b24nCiAgICB9LAogICAgaXRlbUNsYXNzKCkgewogICAgICBjb25zdCBydWxlcyA9IHRoaXMuZmllbGRWYWx1ZS5ydWxlcwogICAgICByZXR1cm4gewogICAgICAgIC8vIG9ubHkgaGFuZGxlIHJlcXVpcmVkIHJ1bGUgZm9yIG5vdwogICAgICAgICdjdWJlLWZvcm0taXRlbV9yZXF1aXJlZCc6IHJ1bGVzICYmIHJ1bGVzLnJlcXVpcmVkLAogICAgICAgICdjdWJlLWZvcm0taXRlbV9idG4nOiB0aGlzLmlzQnRuRmllbGQsCiAgICAgICAgJ2N1YmUtZm9ybS1pdGVtX3ZhbGlkYXRpbmcnOiB0aGlzLnZhbGlkYXRpbmcsCiAgICAgICAgJ2N1YmUtZm9ybS1pdGVtX3BlbmRpbmcnOiB0aGlzLnBlbmRpbmcsCiAgICAgICAgJ2N1YmUtZm9ybS1pdGVtX3ZhbGlkJzogdGhpcy52YWxpZCwKICAgICAgICAnY3ViZS1mb3JtLWl0ZW1faW52YWxpZCc6IHRoaXMuaW52YWxpZAogICAgICB9CiAgICB9LAogICAgbW9kZWxWYWwoKSB7CiAgICAgIHJldHVybiB0aGlzLmZvcm0ubW9kZWxbdGhpcy5maWVsZFZhbHVlLm1vZGVsS2V5XQogICAgfSwKICAgIGNvbXBvbmVudE5hbWUoKSB7CiAgICAgIGNvbnN0IGZpZWxkVmFsdWUgPSB0aGlzLmZpZWxkVmFsdWUKICAgICAgY29uc3QgY29tcG9uZW50ID0gZmllbGRWYWx1ZS5jb21wb25lbnQKICAgICAgaWYgKGNvbXBvbmVudCkgewogICAgICAgIHJldHVybiBjb21wb25lbnQKICAgICAgfQogICAgICBjb25zdCB0eXBlID0gZmllbGRWYWx1ZS50eXBlCiAgICAgIGNvbnN0IGN1YmVUeXBlID0gYGN1YmUtJHt0eXBlfWAKICAgICAgaWYgKGNvbXBvbmVudHNbY3ViZVR5cGVdKSB7CiAgICAgICAgcmV0dXJuIGN1YmVUeXBlCiAgICAgIH0KICAgICAgcmV0dXJuIHR5cGUKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBtb2RlbFZhbChuZXdNb2RlbCkgewogICAgICBpZiAodGhpcy5tb2RlbFZhbHVlICE9PSBuZXdNb2RlbCkgewogICAgICAgIHRoaXMubW9kZWxWYWx1ZSA9IG5ld01vZGVsCiAgICAgIH0KICAgIH0sCiAgICBtb2RlbFZhbHVlOiB7CiAgICAgIGhhbmRsZXIobmV3TW9kZWwpIHsKICAgICAgICAvLyB1cGRhdGUgZm9ybSBtb2RlbAogICAgICAgIHRoaXMuZm9ybS5tb2RlbFt0aGlzLmZpZWxkVmFsdWUubW9kZWxLZXldID0gbmV3TW9kZWwKICAgICAgICB0aGlzLnVwZGF0ZVZhbGlkYXRvck1vZGVsKCkKICAgICAgfSwKICAgICAgc3luYzogdHJ1ZQogICAgfSwKICAgIG9yaWdpblZhbGlkKG5ld1ZhbCkgewogICAgICB0aGlzLmxhc3RPcmlnaW5WYWxpZCA9IG5ld1ZhbAogICAgfQogIH0sCiAgYmVmb3JlQ3JlYXRlKCkgewogICAgdGhpcy5mb3JtID0gdGhpcy4kcGFyZW50LmZvcm0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmZvcm0uYWRkRmllbGQodGhpcykKICAgIHRoaXMuZ2V0VmFsaWRhdG9yTW9kZWwgPSAobW9kZWxWYWx1ZSkgPT4gewogICAgICB0aGlzLnBlbmRpbmcgPSBmYWxzZQogICAgICByZXR1cm4gbW9kZWxWYWx1ZQogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuaW5pdERlYm91bmNlKCkKICAgIHRoaXMuaW5pdEZvY3VzRXZlbnRzKCkKICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXREZWJvdW5jZSgpIHsKICAgICAgbGV0IGRlYm91bmNlVGltZSA9IHRoaXMuZmllbGRWYWx1ZS5kZWJvdW5jZQogICAgICBpZiAoZGVib3VuY2VUaW1lID09PSB0cnVlKSB7CiAgICAgICAgZGVib3VuY2VUaW1lID0gMjAwCiAgICAgIH0KICAgICAgaWYgKCghZGVib3VuY2VUaW1lICYmIGRlYm91bmNlVGltZSAhPT0gMCkgfHwgZGVib3VuY2VUaW1lIDwgMCB8fCB0aGlzLmZpZWxkVmFsdWUudHJpZ2dlciA9PT0gJ2JsdXInKSByZXR1cm4KICAgICAgdGhpcy5nZXRWYWxpZGF0b3JNb2RlbCA9IGRlYm91bmNlKChtb2RlbFZhbHVlKSA9PiB7CiAgICAgICAgdGhpcy5zeW5jVmFsaWRhdG9yVmFsdWUoKQogICAgICAgIC8vIHRoaXMudmFsaWRhdGUoKQogICAgICAgIHJldHVybiBtb2RlbFZhbHVlCiAgICAgIH0sIGRlYm91bmNlVGltZSwgZmFsc2UsIHRoaXMudmFsaWRhdG9yTW9kZWxbdGhpcy52YWxpZGF0b3JNb2RlbEtleV0pCiAgICB9LAogICAgZm9jdXNJbkhhbmRsZXIoKSB7CiAgICAgIHRoaXMuZm9jdXNlZCA9IHRydWUKICAgIH0sCiAgICBmb2N1c091dEhhbmRsZXIoKSB7CiAgICAgIHRoaXMuZm9jdXNlZCA9IGZhbHNlCiAgICAgIHRoaXMudXBkYXRlVmFsaWRhdG9yTW9kZWwoKQogICAgICAvLyB0aGlzLnZhbGlkYXRlKCkKICAgIH0sCiAgICBpbml0Rm9jdXNFdmVudHMoKSB7CiAgICAgIGlmICh0aGlzLmZpZWxkVmFsdWUudHJpZ2dlciA9PT0gJ2JsdXInKSB7CiAgICAgICAgY29uc3QgZm9ybUl0ZW0gPSB0aGlzLiRyZWZzLmZvcm1JdGVtCiAgICAgICAgZm9ybUl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihFVkVOVF9GT0NVU0lOLCB0aGlzLmZvY3VzSW5IYW5kbGVyLCBmYWxzZSkKICAgICAgICBmb3JtSXRlbS5hZGRFdmVudExpc3RlbmVyKEVWRU5UX0ZPQ1VTT1VULCB0aGlzLmZvY3VzT3V0SGFuZGxlciwgZmFsc2UpCiAgICAgICAgdGhpcy5nZXRWYWxpZGF0b3JNb2RlbCA9IChtb2RlbFZhbHVlKSA9PiB7CiAgICAgICAgICBpZiAodGhpcy5mb2N1c2VkKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLnZhbGlkYXRvck1vZGVsW3RoaXMudmFsaWRhdG9yTW9kZWxLZXldCiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLnBlbmRpbmcgPSBmYWxzZQogICAgICAgICAgICB0aGlzLmZvcm0udXBkYXRlUGVuZGluZygpCiAgICAgICAgICAgIHJldHVybiBtb2RlbFZhbHVlCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgcmVtb3ZlRm9jdXNFdmVudHMoKSB7CiAgICAgIGNvbnN0IGZvcm1JdGVtID0gdGhpcy4kcmVmcy5mb3JtSXRlbQogICAgICBmb3JtSXRlbS5yZW1vdmVFdmVudExpc3RlbmVyKEVWRU5UX0ZPQ1VTSU4sIHRoaXMuZm9jdXNJbkhhbmRsZXIsIGZhbHNlKQogICAgICBmb3JtSXRlbS5yZW1vdmVFdmVudExpc3RlbmVyKEVWRU5UX0ZPQ1VTT1VULCB0aGlzLmZvY3VzT3V0SGFuZGxlciwgZmFsc2UpCiAgICB9LAogICAgdXBkYXRlVmFsaWRhdG9yTW9kZWwoKSB7CiAgICAgIHRoaXMucGVuZGluZyA9IHRydWUKICAgICAgdGhpcy52YWxpZGF0b3JNb2RlbFt0aGlzLnZhbGlkYXRvck1vZGVsS2V5XSA9IHRoaXMuZ2V0VmFsaWRhdG9yTW9kZWwodGhpcy5tb2RlbFZhbHVlKQogICAgICBpZiAodGhpcy5wZW5kaW5nKSB7CiAgICAgICAgdGhpcy5mb3JtLnNldFBlbmRpbmcodGhpcy5wZW5kaW5nKQogICAgICAgIHRoaXMub3JpZ2luVmFsaWQgPSB1bmRlZmluZWQKICAgICAgfQogICAgfSwKICAgIHN5bmNWYWxpZGF0b3JWYWx1ZSgpIHsKICAgICAgdGhpcy5wZW5kaW5nID0gZmFsc2UKICAgICAgdGhpcy52YWxpZGF0b3JNb2RlbFt0aGlzLnZhbGlkYXRvck1vZGVsS2V5XSA9IHRoaXMubW9kZWxWYWx1ZQogICAgICB0aGlzLmZvcm0udXBkYXRlUGVuZGluZygpCiAgICB9LAogICAgdmFsaWRhdG9yQ2hhbmdlSGFuZGxlcigpIHsKICAgICAgLy8gZGlzYWJsZWQgb3IgdHJ1ZSB0byB0cnVlIG5vIHVwZGF0ZSB2YWxpZGl0eQogICAgICBpZiAodGhpcy52YWxpZGF0b3JEaXNhYmxlZCB8fCAodGhpcy5vcmlnaW5WYWxpZCAmJiB0aGlzLmxhc3RPcmlnaW5WYWxpZCkpIHsKICAgICAgICByZXR1cm4KICAgICAgfQogICAgICB0aGlzLnVwZGF0ZVZhbGlkaXR5KCkKICAgIH0sCiAgICB2YWxpZGF0aW5nSGFuZGxlcigpIHsKICAgICAgdGhpcy52YWxpZGF0aW5nID0gdHJ1ZQogICAgICB0aGlzLmZvcm0uc2V0VmFsaWRhdGluZyh0cnVlKQogICAgfSwKICAgIHZhbGlkYXRlZEhhbmRsZXIoKSB7CiAgICAgIHRoaXMudmFsaWRhdGluZyA9IGZhbHNlCiAgICAgIHRoaXMuZm9ybS51cGRhdGVWYWxpZGF0aW5nKCkKICAgIH0sCiAgICB1cGRhdGVWYWxpZGl0eSgpIHsKICAgICAgY29uc3QgdmFsaWRhdG9yID0gdGhpcy4kcmVmcy52YWxpZGF0b3IKICAgICAgaWYgKHZhbGlkYXRvcikgewogICAgICAgIC8vIHN5bmMgdXBkYXRlIHZhbGlkYXR5CiAgICAgICAgdGhpcy5mb3JtLnVwZGF0ZVZhbGlkaXR5KHRoaXMuZmllbGRWYWx1ZS5tb2RlbEtleSwgdmFsaWRhdG9yLnZhbGlkLCB2YWxpZGF0b3IucmVzdWx0LCB2YWxpZGF0b3IuZGlydHkpCiAgICAgIH0KICAgIH0sCiAgICB2YWxpZGF0ZShjYikgewogICAgICBjb25zdCBwcm9taXNlID0gY2IyUHJvbWlzZVdpdGhSZXNvbHZlKGNiKQogICAgICBpZiAocHJvbWlzZSkgewogICAgICAgIGNiID0gcHJvbWlzZS5yZXNvbHZlCiAgICAgIH0KICAgICAgY29uc3QgdmFsaWRhdG9yID0gdGhpcy4kcmVmcy52YWxpZGF0b3IKICAgICAgaWYgKHZhbGlkYXRvcikgewogICAgICAgIHZhbGlkYXRvci52YWxpZGF0ZSgoKSA9PiB7CiAgICAgICAgICB0aGlzLnZhbGlkYXRvckRpc2FibGVkID0gdHJ1ZQogICAgICAgICAgdGhpcy51cGRhdGVWYWxpZGl0eSgpCiAgICAgICAgICBjYiAmJiBjYigpCiAgICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgICAgIHRoaXMudmFsaWRhdG9yRGlzYWJsZWQgPSBmYWxzZQogICAgICAgICAgfSkKICAgICAgICB9KQogICAgICB9IGVsc2UgewogICAgICAgIGNiICYmIGNiKCkKICAgICAgfQogICAgICByZXR1cm4gcHJvbWlzZQogICAgfSwKICAgIHJlc2V0KCkgewogICAgICBjb25zdCBmaWVsZFZhbHVlID0gdGhpcy5maWVsZFZhbHVlCiAgICAgIGlmIChmaWVsZFZhbHVlLm1vZGVsS2V5KSB7CiAgICAgICAgY29uc3QgZGVmVmFsdWUgPSBnZXRSZXNldFZhbHVlQnlUeXBlKGZpZWxkVmFsdWUudHlwZSkKICAgICAgICB0aGlzLnZhbGlkYXRvckRpc2FibGVkID0gdHJ1ZQogICAgICAgIHJlc2V0VHlwZVZhbHVlKHRoaXMsICdtb2RlbFZhbHVlJywgZGVmVmFsdWUpCiAgICAgICAgLy8gbmVlZCB0byBzeW5jIHZhbGlkYXRvciB2YWx1ZSB0b28sIGJlY2F1c2Ugb2YgdHJpZ2dlciBibHVyIG9yIGRlYm91bmNlCiAgICAgICAgdGhpcy5zeW5jVmFsaWRhdG9yVmFsdWUoKQogICAgICAgIHRoaXMuJHJlZnMudmFsaWRhdG9yICYmIHRoaXMuJHJlZnMudmFsaWRhdG9yLnJlc2V0KCkKICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgICB0aGlzLnZhbGlkYXRvckRpc2FibGVkID0gZmFsc2UKICAgICAgICB9KQogICAgICB9CiAgICAgIHRoaXMudmFsaWRhdGluZyA9IGZhbHNlCiAgICAgIHRoaXMucGVuZGluZyA9IGZhbHNlCiAgICB9LAogICAgbXNnQ2xpY2soKSB7CiAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqLwogICAgICBpZiAodGhpcy5mb3JtLmxheW91dCAhPT0gTEFZT1VUUy5TVEFOREFSRCkgewogICAgICAgIHJldHVybgogICAgICB9CiAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovCiAgICAgIHRoaXMuJGNyZWF0ZVRvYXN0ICYmIHRoaXMuJGNyZWF0ZVRvYXN0KHsKICAgICAgICB0eXBlOiAnd2FybicsCiAgICAgICAgdHh0OiB0aGlzLiRyZWZzLnZhbGlkYXRvci5tc2csCiAgICAgICAgdGltZTogMTAwMAogICAgICB9KS5zaG93KCkKICAgIH0KICB9LAogIGJlZm9yZURlc3Ryb3koKSB7CiAgICB0aGlzLnJlbW92ZUZvY3VzRXZlbnRzKCkKICAgIHRoaXMuZm9ybS5kZXN0cm95RmllbGQodGhpcykKICAgIHRoaXMuZm9ybSA9IG51bGwKICB9LAogIGNvbXBvbmVudHMKfQo="},{"version":3,"sources":["form-item.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"form-item.vue","sourceRoot":"node_modules/cube-ui/src/components/form","sourcesContent":["<template>\n  <div class=\"cube-form-item border-bottom-1px\" ref=\"formItem\" :class=\"itemClass\">\n    <template v-if=\"!isBtnField\">\n      <slot name=\"label\">\n        <div class=\"cube-form-label\" v-show=\"fieldValue.label\"><span>{{fieldValue.label}}</span></div>\n      </slot>\n      <cube-validator\n        class=\"cube-form-field\"\n        v-if=\"hasRules\"\n        ref=\"validator\"\n        v-model=\"originValid\"\n        :disabled=\"validatorDisabled\"\n        :model=\"validatorModel\"\n        :model-key=\"validatorModelKey\"\n        :rules=\"fieldValue.rules\"\n        :messages=\"fieldValue.messages\"\n        @input=\"validatorChangeHandler\"\n        @validating=\"validatingHandler\"\n        @validated=\"validatedHandler\"\n        @msg-click=\"msgClick\"\n      >\n        <slot>\n          <component :is=\"componentName\" v-model=\"modelValue\" v-bind=\"fieldValue.props\" v-on=\"fieldValue.events\"></component>\n        </slot>\n      </cube-validator>\n      <div class=\"cube-form-field\" v-else>\n        <slot>\n          <component :is=\"componentName\" v-model=\"modelValue\" v-bind=\"fieldValue.props\" v-on=\"fieldValue.events\"></component>\n        </slot>\n      </div>\n    </template>\n    <cube-button v-bind=\"fieldValue.props\" v-on=\"fieldValue.events\" v-else>{{fieldValue.label}}</cube-button>\n  </div>\n</template>\n\n<script>\n  import { processField } from './fields/index'\n  import { resetTypeValue, cb2PromiseWithResolve, debounce } from '../../common/helpers/util'\n  import CubeValidator from '../validator/validator.vue'\n  import LAYOUTS from './layouts'\n  import { getResetValueByType } from './fields/reset'\n  import mixin from './mixin'\n  import components from './components'\n  components.CubeValidator = CubeValidator\n\n  const COMPONENT_NAME = 'cube-form-item'\n  const EVENT_FOCUSIN = 'focusin'\n  const EVENT_FOCUSOUT = 'focusout'\n\n  export default {\n    name: COMPONENT_NAME,\n    mixins: [mixin],\n    props: {\n      field: {\n        type: Object,\n        default() {\n          /* istanbul ignore next */\n          return {}\n        }\n      }\n    },\n    data() {\n      const validatorModelKey = 'value'\n      const modelKey = this.field.modelKey\n      const modelValue = modelKey ? this.form.model[modelKey] : null\n      return {\n        validatorDisabled: false,\n        validatorModelKey,\n        modelValue: modelValue,\n        validatorModel: {\n          [validatorModelKey]: modelValue\n        }\n      }\n    },\n    computed: {\n      fieldValue() {\n        return processField(this.field)\n      },\n      hasRules() {\n        return Object.keys(this.fieldValue.rules || {}).length > 0\n      },\n      isBtnField() {\n        return this.fieldValue.type === 'button'\n      },\n      itemClass() {\n        const rules = this.fieldValue.rules\n        return {\n          // only handle required rule for now\n          'cube-form-item_required': rules && rules.required,\n          'cube-form-item_btn': this.isBtnField,\n          'cube-form-item_validating': this.validating,\n          'cube-form-item_pending': this.pending,\n          'cube-form-item_valid': this.valid,\n          'cube-form-item_invalid': this.invalid\n        }\n      },\n      modelVal() {\n        return this.form.model[this.fieldValue.modelKey]\n      },\n      componentName() {\n        const fieldValue = this.fieldValue\n        const component = fieldValue.component\n        if (component) {\n          return component\n        }\n        const type = fieldValue.type\n        const cubeType = `cube-${type}`\n        if (components[cubeType]) {\n          return cubeType\n        }\n        return type\n      }\n    },\n    watch: {\n      modelVal(newModel) {\n        if (this.modelValue !== newModel) {\n          this.modelValue = newModel\n        }\n      },\n      modelValue: {\n        handler(newModel) {\n          // update form model\n          this.form.model[this.fieldValue.modelKey] = newModel\n          this.updateValidatorModel()\n        },\n        sync: true\n      },\n      originValid(newVal) {\n        this.lastOriginValid = newVal\n      }\n    },\n    beforeCreate() {\n      this.form = this.$parent.form\n    },\n    created() {\n      this.form.addField(this)\n      this.getValidatorModel = (modelValue) => {\n        this.pending = false\n        return modelValue\n      }\n    },\n    mounted() {\n      this.initDebounce()\n      this.initFocusEvents()\n    },\n    methods: {\n      initDebounce() {\n        let debounceTime = this.fieldValue.debounce\n        if (debounceTime === true) {\n          debounceTime = 200\n        }\n        if ((!debounceTime && debounceTime !== 0) || debounceTime < 0 || this.fieldValue.trigger === 'blur') return\n        this.getValidatorModel = debounce((modelValue) => {\n          this.syncValidatorValue()\n          // this.validate()\n          return modelValue\n        }, debounceTime, false, this.validatorModel[this.validatorModelKey])\n      },\n      focusInHandler() {\n        this.focused = true\n      },\n      focusOutHandler() {\n        this.focused = false\n        this.updateValidatorModel()\n        // this.validate()\n      },\n      initFocusEvents() {\n        if (this.fieldValue.trigger === 'blur') {\n          const formItem = this.$refs.formItem\n          formItem.addEventListener(EVENT_FOCUSIN, this.focusInHandler, false)\n          formItem.addEventListener(EVENT_FOCUSOUT, this.focusOutHandler, false)\n          this.getValidatorModel = (modelValue) => {\n            if (this.focused) {\n              return this.validatorModel[this.validatorModelKey]\n            } else {\n              this.pending = false\n              this.form.updatePending()\n              return modelValue\n            }\n          }\n        }\n      },\n      removeFocusEvents() {\n        const formItem = this.$refs.formItem\n        formItem.removeEventListener(EVENT_FOCUSIN, this.focusInHandler, false)\n        formItem.removeEventListener(EVENT_FOCUSOUT, this.focusOutHandler, false)\n      },\n      updateValidatorModel() {\n        this.pending = true\n        this.validatorModel[this.validatorModelKey] = this.getValidatorModel(this.modelValue)\n        if (this.pending) {\n          this.form.setPending(this.pending)\n          this.originValid = undefined\n        }\n      },\n      syncValidatorValue() {\n        this.pending = false\n        this.validatorModel[this.validatorModelKey] = this.modelValue\n        this.form.updatePending()\n      },\n      validatorChangeHandler() {\n        // disabled or true to true no update validity\n        if (this.validatorDisabled || (this.originValid && this.lastOriginValid)) {\n          return\n        }\n        this.updateValidity()\n      },\n      validatingHandler() {\n        this.validating = true\n        this.form.setValidating(true)\n      },\n      validatedHandler() {\n        this.validating = false\n        this.form.updateValidating()\n      },\n      updateValidity() {\n        const validator = this.$refs.validator\n        if (validator) {\n          // sync update validaty\n          this.form.updateValidity(this.fieldValue.modelKey, validator.valid, validator.result, validator.dirty)\n        }\n      },\n      validate(cb) {\n        const promise = cb2PromiseWithResolve(cb)\n        if (promise) {\n          cb = promise.resolve\n        }\n        const validator = this.$refs.validator\n        if (validator) {\n          validator.validate(() => {\n            this.validatorDisabled = true\n            this.updateValidity()\n            cb && cb()\n            this.$nextTick(() => {\n              this.validatorDisabled = false\n            })\n          })\n        } else {\n          cb && cb()\n        }\n        return promise\n      },\n      reset() {\n        const fieldValue = this.fieldValue\n        if (fieldValue.modelKey) {\n          const defValue = getResetValueByType(fieldValue.type)\n          this.validatorDisabled = true\n          resetTypeValue(this, 'modelValue', defValue)\n          // need to sync validator value too, because of trigger blur or debounce\n          this.syncValidatorValue()\n          this.$refs.validator && this.$refs.validator.reset()\n          this.$nextTick(() => {\n            this.validatorDisabled = false\n          })\n        }\n        this.validating = false\n        this.pending = false\n      },\n      msgClick() {\n        /* istanbul ignore if */\n        if (this.form.layout !== LAYOUTS.STANDARD) {\n          return\n        }\n        /* istanbul ignore next */\n        this.$createToast && this.$createToast({\n          type: 'warn',\n          txt: this.$refs.validator.msg,\n          time: 1000\n        }).show()\n      }\n    },\n    beforeDestroy() {\n      this.removeFocusEvents()\n      this.form.destroyField(this)\n      this.form = null\n    },\n    components\n  }\n</script>\n\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  @require \"../../common/stylus/variable.styl\"\n  @require \"../../common/stylus/mixin.styl\"\n\n  .cube-form-item\n    position: relative\n    display: flex\n    align-items: center\n    padding: 0 15px\n    &:last-child\n      &::after\n        display: none\n    .cube-checkbox-group, .cube-radio-group\n      background-color: transparent\n    .cube-checkbox, .cube-radio\n      padding-left: 0\n      padding-right: 0\n  .cube-form-item_btn\n    margin: 15px 0\n    &::after\n      display: none\n  .cube-form-label\n    display: flex\n    align-items: center\n    word-wrap: break-word\n    word-break: break-word\n  .cube-form-item_required\n    .cube-form-label\n      &::before\n        content: \"*\"\n        display: block\n        margin-top: 1px\n        margin-right: .3em\n        color: $form-label-required-color\n</style>\n"]}]}