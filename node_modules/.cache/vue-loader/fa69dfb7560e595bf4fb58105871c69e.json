{"remainingRequest":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\cube-ui\\src\\components\\form\\form.vue?vue&type=style&index=0&lang=stylus&rel=stylesheet%2Fstylus&","dependencies":[{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\cube-ui\\src\\components\\form\\form.vue","mtime":499162500000},{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\stylus-loader\\index.js","mtime":1519606876000},{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkByZXF1aXJlICIuLi8uLi9jb21tb24vc3R5bHVzL3ZhcmlhYmxlLnN0eWwiCkByZXF1aXJlICIuLi8uLi9jb21tb24vc3R5bHVzL21peGluLnN0eWwiCgouY3ViZS1mb3JtCiAgcG9zaXRpb246IHJlbGF0aXZlCiAgZm9udC1zaXplOiAkZm9udHNpemUtbGFyZ2UKICBsaW5lLWhlaWdodDogMS40MjkKICBjb2xvcjogJGZvcm0tY29sb3IKICBiYWNrZ3JvdW5kLWNvbG9yOiAkZm9ybS1iZ2MKLmN1YmUtZm9ybV9ncm91cHMKICAuY3ViZS1mb3JtLWdyb3VwLWxlZ2VuZAogICAgcGFkZGluZzogMTBweCAxNXB4CiAgICAmOmVtcHR5CiAgICAgIHBhZGRpbmctdG9wOiA1cHgKICAgICAgcGFkZGluZy1ib3R0b206IDVweAouY3ViZS1mb3JtX3N0YW5kYXJkCiAgLmN1YmUtZm9ybS1pdGVtCiAgICBtaW4taGVpZ2h0OiA0NnB4CiAgLmN1YmUtZm9ybS1maWVsZAogICAgZmxleDogMQogICAgZm9udC1zaXplOiAkZm9udHNpemUtbWVkaXVtCiAgLmN1YmUtdmFsaWRhdG9yCiAgICBkaXNwbGF5OiBmbGV4CiAgICBhbGlnbi1pdGVtczogY2VudGVyCiAgICBwb3NpdGlvbjogcmVsYXRpdmUKICAuY3ViZS12YWxpZGF0b3JfaW52YWxpZAogICAgY29sb3I6ICRmb3JtLWludmFsaWQtY29sb3IKICAuY3ViZS12YWxpZGF0b3ItY29udGVudAogICAgZmxleDogMQogIC5jdWJlLXZhbGlkYXRvci1tc2ctZGVmCiAgICBmb250LXNpemU6IDAKICAuY3ViZS12YWxpZGF0b3JfaW52YWxpZAogICAgLmN1YmUtdmFsaWRhdG9yLW1zZwogICAgICAmOjpiZWZvcmUKICAgICAgICBjb250ZW50OiAiXGU2MTQiCiAgICAgICAgcGFkZGluZy1sZWZ0OiA1cHgKICAgICAgICBmb250LWZhbWlseTogImN1YmUtaWNvbiIhaW1wb3J0YW50CiAgICAgICAgZm9udC1zaXplOiAkZm9udHNpemUtbGFyZ2UteHgKICAgICAgICBmb250LXN0eWxlOiBub3JtYWwKICAgICAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZAogICAgICAgIC13ZWJraXQtdGV4dC1zdHJva2Utd2lkdGg6IDAuMnB4CiAgICAgICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZQogIC5jdWJlLWZvcm0tbGFiZWwKICAgIHdpZHRoOiAxMDBweAogICAgcGFkZGluZy1yaWdodDogMTBweAogIC5jdWJlLWNoZWNrYm94LWdyb3VwLCAuY3ViZS1yYWRpby1ncm91cAogICAgJjo6YmVmb3JlLCAmOjphZnRlcgogICAgICBkaXNwbGF5OiBub25lCiAgLmN1YmUtaW5wdXQKICAgIGlucHV0CiAgICAgIHBhZGRpbmc6IDEzcHggMAogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudAogICAgJjo6YWZ0ZXIKICAgICAgZGlzcGxheTogbm9uZQogIC5jdWJlLXRleHRhcmVhLXdyYXBwZXIKICAgIHBhZGRpbmc6IDEzcHggMAogICAgaGVpZ2h0OiAyMHB4CiAgICAmLmN1YmUtdGV4dGFyZWFfZXhwYW5kZWQKICAgICAgaGVpZ2h0OiA2MHB4CiAgICAgIHBhZGRpbmctYm90dG9tOiAyMHB4CiAgICAgIC5jdWJlLXRleHRhcmVhLWluZGljYXRvcgogICAgICAgIGJvdHRvbTogMnB4CiAgICAuY3ViZS10ZXh0YXJlYQogICAgICBwYWRkaW5nOiAwCiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50CiAgICAmOjphZnRlcgogICAgICBkaXNwbGF5OiBub25lCiAgLmN1YmUtc2VsZWN0CiAgICBwYWRkaW5nLWxlZnQ6IDAKICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50CiAgICAmOjphZnRlcgogICAgICBkaXNwbGF5OiBub25lCiAgLmN1YmUtdXBsb2FkLWRlZgogICAgcGFkZGluZzogNXB4IDAKICAgIC5jdWJlLXVwbG9hZC1idG4sIC5jdWJlLXVwbG9hZC1maWxlCiAgICAgIG1hcmdpbjogNXB4IDEwcHggNXB4IDAKLmN1YmUtZm9ybV9jbGFzc2ljCiAgLmN1YmUtZm9ybS1pdGVtCiAgICBkaXNwbGF5OiBibG9jawogICAgcGFkZGluZzogMTVweAogICAgJjpsYXN0LWNoaWxkCiAgICAgIHBhZGRpbmctYm90dG9tOiAzMHB4CiAgICAmOjphZnRlcgogICAgICBkaXNwbGF5OiBub25lCiAgICAuY3ViZS12YWxpZGF0b3ItbXNnCiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZQogICAgICBtYXJnaW4tdG9wOiAzcHgKICAgICAgJjo6YmVmb3JlCiAgICAgICAgZGlzcGxheTogbm9uZQogICAgLmN1YmUtdmFsaWRhdG9yLW1zZy1kZWYKICAgICAgZm9udC1zaXplOiAkZm9udHNpemUtc21hbGwKICAuY3ViZS1mb3JtLWl0ZW1fYnRuCiAgICBwYWRkaW5nLXRvcDogMAogICAgcGFkZGluZy1ib3R0b206IDAKICAgICY6bGFzdC1jaGlsZAogICAgICBwYWRkaW5nLWJvdHRvbTogMAogIC5jdWJlLWZvcm0tbGFiZWwKICAgIHBhZGRpbmctYm90dG9tOiAxNXB4Ci5jdWJlLWZvcm1fZnJlc2gKICAuY3ViZS1mb3JtLWl0ZW0KICAgIGRpc3BsYXk6IGJsb2NrCiAgICBwYWRkaW5nOiAyZW0gMTVweCAxMHB4CiAgICAmOjphZnRlcgogICAgICBkaXNwbGF5OiBub25lCiAgICAuY3ViZS12YWxpZGF0b3ItbXNnCiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZQogICAgICB0b3A6IDFlbQogICAgICByaWdodDogMTVweAogICAgICBib3R0b206IGF1dG8KICAgICAgbWFyZ2luLXRvcDogLS40ZW0KICAgICAgZm9udC1zaXplOiAkZm9udHNpemUtc21hbGwKICAgICAgJjo6YmVmb3JlCiAgICAgICAgZGlzcGxheTogbm9uZQogICAgLmN1YmUtdmFsaWRhdG9yLW1zZy1kZWYKICAgICAgZm9udC1zaXplOiAxMDAlCiAgLmN1YmUtZm9ybS1pdGVtX2J0bgogICAgcGFkZGluZy10b3A6IDAKICAgIHBhZGRpbmctYm90dG9tOiAwCiAgICAmOmxhc3QtY2hpbGQKICAgICAgcGFkZGluZy1ib3R0b206IDAKICAuY3ViZS1mb3JtLWxhYmVsCiAgICBwb3NpdGlvbjogYWJzb2x1dGUKICAgIHRvcDogMWVtCiAgICBtYXJnaW4tdG9wOiAtLjRlbQogICAgZm9udC1zaXplOiAkZm9udHNpemUtc21hbGwK"},{"version":3,"sources":["form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"form.vue","sourceRoot":"node_modules/cube-ui/src/components/form","sourcesContent":["<template>\n  <form ref=\"form\" class=\"cube-form\" :class=\"formClass\" :action=\"action\" @submit=\"submitHandler\" @reset=\"resetHandler\">\n    <slot>\n      <cube-form-group\n        v-for=\"(group, index) in groups\"\n        :fields=\"group.fields\"\n        :legend=\"group.legend\"\n        :key=\"group.key || index\" />\n    </slot>\n  </form>\n</template>\n\n<script>\n  import { dispatchEvent } from '../../common/helpers/dom'\n  import { cb2PromiseWithResolve } from '../../common/helpers/util'\n  import CubeFormGroup from './form-group.vue'\n  import LAYOUTS from './layouts'\n  import mixin from './mixin'\n\n  const COMPONENT_NAME = 'cube-form'\n  const EVENT_SUBMIT = 'submit'\n  const EVENT_RESET = 'reset'\n  const EVENT_VALIDATE = 'validate'\n  const EVENT_VALID = 'valid'\n  const EVENT_INVALID = 'invalid'\n\n  export default {\n    name: COMPONENT_NAME,\n    mixins: [mixin],\n    props: {\n      action: String,\n      model: {\n        type: Object,\n        default() {\n          /* istanbul ignore next */\n          return {}\n        }\n      },\n      schema: {\n        type: Object,\n        default() {\n          /* istanbul ignore next */\n          return {}\n        }\n      },\n      options: {\n        type: Object,\n        default() {\n          return {\n            scrollToInvalidField: false,\n            layout: LAYOUTS.STANDARD\n          }\n        }\n      },\n      immediateValidate: {\n        type: Boolean,\n        default: false\n      },\n      submitAlwaysValidate: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data() {\n      return {\n        validatedCount: 0,\n        dirty: false,\n        firstInvalidField: null,\n        firstInvalidFieldIndex: -1\n      }\n    },\n    computed: {\n      fieldsModel() {\n        const model = {}\n        this.fields.forEach((fieldComponent) => {\n          if (!fieldComponent.isBtnField) {\n            model[fieldComponent.fieldValue.modelKey] = fieldComponent.modelValue\n          }\n        })\n        return model\n      },\n      groups() {\n        const schema = this.schema\n        const groups = schema.groups || []\n        if (schema.fields) {\n          groups.unshift({\n            fields: schema.fields\n          })\n        }\n        return groups\n      },\n      fieldsData() {\n        return this.groups.reduce((fields, group) => {\n          group.fields.reduce((fields, field) => {\n            fields.push(field)\n            return fields\n          }, fields)\n          return fields\n        }, [])\n      },\n      layout() {\n        const options = this.options\n        const layout = (options && options.layout) || LAYOUTS.STANDARD\n        return layout\n      },\n      formClass() {\n        const invalid = this.invalid\n        const valid = this.valid\n        const layout = this.layout\n        return {\n          'cube-form_standard': layout === LAYOUTS.STANDARD,\n          'cube-form_groups': this.groups.length > 1,\n          'cube-form_validating': this.validating,\n          'cube-form_pending': this.pending,\n          'cube-form_valid': valid,\n          'cube-form_invalid': invalid,\n          'cube-form_classic': layout === LAYOUTS.CLASSIC,\n          'cube-form_fresh': layout === LAYOUTS.FRESH\n        }\n      }\n    },\n    watch: {\n      validatedCount() {\n        this.$emit(EVENT_VALIDATE, {\n          validity: this.validity,\n          valid: this.valid,\n          invalid: this.invalid,\n          dirty: this.dirty,\n          firstInvalidFieldIndex: this.firstInvalidFieldIndex\n        })\n      }\n    },\n    beforeCreate() {\n      this.form = this\n      this.fields = []\n      this.validity = {}\n    },\n    mounted() {\n      if (this.immediateValidate) {\n        this.validate()\n      }\n    },\n    methods: {\n      submit(skipValidate = false) {\n        this.skipValidate = skipValidate\n        dispatchEvent(this.$refs.form, 'submit')\n        this.skipValidate = false\n      },\n      reset() {\n        dispatchEvent(this.$refs.form, 'reset')\n      },\n      submitHandler(e) {\n        // sync all fields value because of trigger: blur or debounce\n        this.syncValidatorValues()\n        if (this.skipValidate) {\n          this.$emit(EVENT_SUBMIT, e, this.model, this.fieldsModel)\n          return\n        }\n        const submited = (submitResult) => {\n          if (submitResult) {\n            this.$emit(EVENT_VALID, this.validity)\n            this.$emit(EVENT_SUBMIT, e, this.model, this.fieldsModel)\n          } else {\n            // scrollToInvalidField\n            if (this.options.scrollToInvalidField && this.firstInvalidField) {\n              this.firstInvalidField.$el.scrollIntoView()\n            }\n            e.preventDefault()\n            this.$emit(EVENT_INVALID, this.validity)\n          }\n        }\n        if (this.submitAlwaysValidate || this.valid === undefined) {\n          this._submit(submited)\n          if (this.validating || this.pending) {\n            // async validate\n            e.preventDefault()\n          }\n        } else {\n          submited(this.valid)\n        }\n      },\n      resetHandler(e) {\n        this._reset()\n        this.$emit(EVENT_RESET, e)\n      },\n      _submit(cb) {\n        this.validate(() => {\n          cb && cb(this.valid)\n        })\n      },\n      _reset() {\n        this.fields.forEach((fieldComponent) => {\n          fieldComponent.reset()\n        })\n        this.setValidity()\n        this.setValidating()\n        this.setPending()\n      },\n      syncValidatorValues() {\n        this.fields.forEach((fieldComponent) => {\n          fieldComponent.syncValidatorValue()\n        })\n      },\n      validate(cb) {\n        const promise = cb2PromiseWithResolve(cb)\n        if (promise) {\n          cb = promise.resolve\n        }\n        let doneCount = 0\n        const len = this.fields.length\n        this.originValid = undefined\n        this.fields.forEach((fieldComponent) => {\n          fieldComponent.validate(() => {\n            doneCount++\n            if (doneCount === len) {\n              // all done\n              cb && cb(this.valid)\n            }\n          })\n        })\n        return promise\n      },\n      updateValidating() {\n        const validating = this.fields.some((fieldComponent) => fieldComponent.validating)\n        this.setValidating(validating)\n      },\n      updatePending() {\n        const pending = this.fields.some((fieldComponent) => fieldComponent.pending)\n        this.setPending(pending)\n      },\n      setValidating(validating = false) {\n        this.validating = validating\n      },\n      setPending(pending = false) {\n        this.pending = pending\n      },\n      updateValidity(modelKey, valid, result, dirty) {\n        const curResult = this.validity[modelKey]\n        if (curResult && curResult.valid === valid && curResult.result === result && curResult.dirty === dirty) {\n          return\n        }\n        this.setValidity(modelKey, {\n          valid,\n          result,\n          dirty\n        })\n      },\n      setValidity(key, val) {\n        let validity = {}\n        if (key) {\n          Object.assign(validity, this.validity)\n          if (val === undefined) {\n            delete validity[key]\n          } else {\n            validity[key] = val\n          }\n        }\n\n        let dirty = false\n        let invalid = false\n        let valid = true\n        let firstInvalidFieldKey = ''\n        this.fields.forEach((fieldComponent) => {\n          const modelKey = fieldComponent.fieldValue.modelKey\n          if (modelKey) {\n            const retVal = validity[modelKey]\n            if (retVal) {\n              if (retVal.dirty) {\n                dirty = true\n              }\n              if (retVal.valid === false) {\n                valid = false\n              } else if (valid && !retVal.valid) {\n                valid = retVal.valid\n              }\n\n              if (!invalid && retVal.valid === false) {\n                // invalid\n                invalid = true\n                firstInvalidFieldKey = modelKey\n              }\n            } else if (fieldComponent.hasRules) {\n              if (valid) {\n                valid = undefined\n              }\n              validity[modelKey] = {\n                valid: undefined,\n                result: {},\n                dirty: false\n              }\n            }\n          }\n        })\n        this.validity = validity\n        this.dirty = dirty\n        this.originValid = valid\n        this.setFirstInvalid(firstInvalidFieldKey)\n        this.validatedCount++\n      },\n      setFirstInvalid(key) {\n        if (!key) {\n          this.firstInvalidField = null\n          this.firstInvalidFieldIndex = -1\n          return\n        }\n        this.fields.some((fieldComponent, index) => {\n          if (fieldComponent.fieldValue.modelKey === key) {\n            this.firstInvalidField = fieldComponent\n            this.firstInvalidFieldIndex = index\n            return true\n          }\n        })\n      },\n      addField(fieldComponent) {\n        const i = this.fieldsData.indexOf(fieldComponent.field)\n        this.fields.splice(i, 0, fieldComponent)\n        const modelKey = fieldComponent.fieldValue.modelKey\n        modelKey && this.setValidity(modelKey)\n      },\n      destroyField(fieldComponent) {\n        const i = this.fields.indexOf(fieldComponent)\n        this.fields.splice(i, 1)\n        const modelKey = fieldComponent.fieldValue.modelKey\n        modelKey && this.setValidity(modelKey)\n      }\n    },\n    beforeDestroy() {\n      this.form = null\n      this.firstInvalidField = null\n    },\n    components: {\n      CubeFormGroup\n    }\n  }\n</script>\n\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  @require \"../../common/stylus/variable.styl\"\n  @require \"../../common/stylus/mixin.styl\"\n\n  .cube-form\n    position: relative\n    font-size: $fontsize-large\n    line-height: 1.429\n    color: $form-color\n    background-color: $form-bgc\n  .cube-form_groups\n    .cube-form-group-legend\n      padding: 10px 15px\n      &:empty\n        padding-top: 5px\n        padding-bottom: 5px\n  .cube-form_standard\n    .cube-form-item\n      min-height: 46px\n    .cube-form-field\n      flex: 1\n      font-size: $fontsize-medium\n    .cube-validator\n      display: flex\n      align-items: center\n      position: relative\n    .cube-validator_invalid\n      color: $form-invalid-color\n    .cube-validator-content\n      flex: 1\n    .cube-validator-msg-def\n      font-size: 0\n    .cube-validator_invalid\n      .cube-validator-msg\n        &::before\n          content: \"\\e614\"\n          padding-left: 5px\n          font-family: \"cube-icon\"!important\n          font-size: $fontsize-large-xx\n          font-style: normal\n          -webkit-font-smoothing: antialiased\n          -webkit-text-stroke-width: 0.2px\n          -moz-osx-font-smoothing: grayscale\n    .cube-form-label\n      width: 100px\n      padding-right: 10px\n    .cube-checkbox-group, .cube-radio-group\n      &::before, &::after\n        display: none\n    .cube-input\n      input\n        padding: 13px 0\n        background-color: transparent\n      &::after\n        display: none\n    .cube-textarea-wrapper\n      padding: 13px 0\n      height: 20px\n      &.cube-textarea_expanded\n        height: 60px\n        padding-bottom: 20px\n        .cube-textarea-indicator\n          bottom: 2px\n      .cube-textarea\n        padding: 0\n        background-color: transparent\n      &::after\n        display: none\n    .cube-select\n      padding-left: 0\n      background-color: transparent\n      &::after\n        display: none\n    .cube-upload-def\n      padding: 5px 0\n      .cube-upload-btn, .cube-upload-file\n        margin: 5px 10px 5px 0\n  .cube-form_classic\n    .cube-form-item\n      display: block\n      padding: 15px\n      &:last-child\n        padding-bottom: 30px\n      &::after\n        display: none\n      .cube-validator-msg\n        position: absolute\n        margin-top: 3px\n        &::before\n          display: none\n      .cube-validator-msg-def\n        font-size: $fontsize-small\n    .cube-form-item_btn\n      padding-top: 0\n      padding-bottom: 0\n      &:last-child\n        padding-bottom: 0\n    .cube-form-label\n      padding-bottom: 15px\n  .cube-form_fresh\n    .cube-form-item\n      display: block\n      padding: 2em 15px 10px\n      &::after\n        display: none\n      .cube-validator-msg\n        position: absolute\n        top: 1em\n        right: 15px\n        bottom: auto\n        margin-top: -.4em\n        font-size: $fontsize-small\n        &::before\n          display: none\n      .cube-validator-msg-def\n        font-size: 100%\n    .cube-form-item_btn\n      padding-top: 0\n      padding-bottom: 0\n      &:last-child\n        padding-bottom: 0\n    .cube-form-label\n      position: absolute\n      top: 1em\n      margin-top: -.4em\n      font-size: $fontsize-small\n</style>\n"]}]}