{"remainingRequest":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\cube-ui\\src\\components\\validator\\validator.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\cube-ui\\src\\components\\validator\\validator.vue","mtime":499162500000},{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\BaiduNetdiskDownload\\思否\\20年spring boot+vue课程源码\\课程源码\\00-前端-后端代码-数据库\\xdclass_front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["validator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"validator.vue","sourceRoot":"node_modules/cube-ui/src/components/validator","sourcesContent":["<template>\n  <div class=\"cube-validator\" :class=\"containerClass\">\n    <div class=\"cube-validator-content\">\n      <slot></slot>\n    </div>\n    <div class=\"cube-validator-msg\" @click=\"msgClickHandler\">\n      <slot\n        name=\"message\"\n        :message=\"msg\"\n        :dirty=\"dirty\"\n        :validated=\"validated\"\n        :validating=\"validating\"\n        :result=\"result\"\n      >\n        <span class=\"cube-validator-msg-def\">{{ dirtyOrValidated ? msg : '' }}</span>\n      </slot>\n    </div>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import { parallel, cb2PromiseWithResolve, isUndef, isFunc, isString, isArray } from '../../common/helpers/util'\n  import { rules } from '../../common/helpers/validator'\n  import localeMixin from '../../common/mixins/locale'\n  import template from '../../common/helpers/string-template'\n\n  const COMPONENT_NAME = 'cube-validator'\n  const EVENT_INPUT = 'input'\n  const EVENT_VALIDATING = 'validating'\n  const EVENT_VALIDATED = 'validated'\n  const EVENT_MSG_CLICK = 'msg-click'\n\n  export default {\n    name: COMPONENT_NAME,\n    mixins: [localeMixin],\n    props: {\n      model: {\n        required: true\n      },\n      modelKey: {\n        type: String,\n        default: ''\n      },\n      rules: {\n        type: Object,\n        default() {\n          return {}\n        }\n      },\n      messages: {\n        type: [Object, String],\n        default() {\n          return {}\n        }\n      },\n      value: {},\n      disabled: {\n        type: Boolean,\n        default: false\n      },\n      immediate: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data() {\n      return {\n        valid: this.value,\n        validated: false,\n        msg: '',\n        dirty: false,\n        validating: false,\n        result: {}\n      }\n    },\n    computed: {\n      targetModel() {\n        const modelKey = this.modelKey\n        const model = this.model\n        return modelKey ? model[modelKey] : model\n      },\n      invalid() {\n        const valid = this.valid\n        return isUndef(valid) ? undefined : !valid\n      },\n      isDisabled() {\n        const disabled = this.disabled\n        const noRules = Object.keys(this.rules).length <= 0\n        return disabled || noRules\n      },\n      dirtyOrValidated() {\n        return (this.dirty || this.validated) && !this.validating\n      },\n      containerClass() {\n        const disabled = this.isDisabled\n        if (disabled) {\n          return\n        }\n        return {\n          'cube-validator_invalid': this.invalid,\n          'cube-validator_valid': this.valid,\n          'cube-validator_validating': this.validating\n        }\n      }\n    },\n    watch: {\n      value(newVal) {\n        this.valid = newVal\n      },\n      targetModel: {\n        handler() {\n          if (this.isDisabled) {\n            return\n          }\n          if (!this.dirty) {\n            this.dirty = true\n          }\n\n          this.validate()\n        },\n        sync: true\n      },\n      rules() {\n        this.validate()\n      },\n      isDisabled(newVal) {\n        if (!newVal && this.trigger && !this.validated) {\n          this.validate()\n        }\n      }\n    },\n    created() {\n      this._validateCount = 0\n      if (!this.isDisabled && this.immediate) {\n        this.validate()\n      }\n    },\n    methods: {\n      validate(cb) {\n        const promise = cb2PromiseWithResolve(cb)\n        if (promise) {\n          cb = promise.resolve\n        }\n        if (this.isDisabled) {\n          cb && cb(this.valid)\n          return promise\n        }\n        this._validateCount++\n        const validateCount = this._validateCount\n        const val = this.targetModel\n\n        const configRules = this.rules\n        const type = configRules.type\n        const allTasks = []\n\n        let requiredValid = true\n        if (!configRules.required) {\n          // treat it as empty, no need to validate other rules\n          requiredValid = rules.required(val, true, type)\n        }\n\n        if (requiredValid) {\n          for (const key in configRules) {\n            const ruleValue = configRules[key]\n            let ret\n            if (isFunc(ruleValue)) {\n              ret = ruleValue(val, configRules[key], type)\n            } else {\n              ret = !rules[key] || rules[key](val, configRules[key], type)\n            }\n            allTasks.push((next) => {\n              const resolve = (_ret) => {\n                next({\n                  key: key,\n                  valid: _ret === true,\n                  ret: _ret\n                })\n              }\n              const reject = (err) => {\n                next({\n                  key: key,\n                  valid: false,\n                  ret: err\n                })\n              }\n              if (typeof ret === 'object' && isFunc(ret.then)) {\n                ret.then(resolve).catch(reject)\n              } else if (isFunc(ret)) {\n                ret(resolve, reject)\n              } else {\n                next({\n                  key: key,\n                  valid: ret === true,\n                  ret: ret\n                })\n              }\n            })\n          }\n        }\n        this._checkTasks(allTasks, validateCount, cb)\n        return promise\n      },\n      _checkTasks(allTasks, validateCount, cb) {\n        const configRules = this.rules\n        let isValid = true\n        const result = {}\n        let sync = true\n        this.validating = true\n        const model = this.targetModel\n        parallel(allTasks, (results) => {\n          if (this._validateCount !== validateCount) {\n            return\n          }\n          this.validating = false\n          results.forEach(({ key, valid, ret }) => {\n            const msg = this.messages[key]\n              ? isFunc(this.messages[key])\n                ? this.messages[key](ret, valid)\n                : this.messages[key]\n              : this.findMessage(key, configRules[key], configRules.type, model)\n            if (isValid && !valid) {\n              isValid = false\n              this.msg = msg\n            }\n            result[key] = {\n              valid: valid,\n              invalid: !valid,\n              message: msg\n            }\n          })\n          if (!sync) {\n            this.$emit(EVENT_VALIDATED, isValid)\n          }\n          this._updateModel(isValid, result)\n          cb && cb(this.valid)\n        })\n        if (this.validating) {\n          sync = false\n          // only async validate trigger validating\n          this.$emit(EVENT_VALIDATING)\n          this.valid = undefined\n          this.$emit(EVENT_INPUT, this.valid)\n        }\n      },\n      _updateModel(valid, result) {\n        this.validated = true\n        this.result = result\n        if (result.required && result.required.invalid) {\n          // required\n          this.msg = result.required.message\n        }\n\n        if (valid) {\n          this.msg = ''\n        }\n        this.valid = valid\n        this.$emit(EVENT_INPUT, this.valid)\n      },\n      reset() {\n        this._validateCount++\n        this.validating = false\n        this.dirty = false\n        this.result = {}\n        this.msg = ''\n        this.validated = false\n        this.valid = undefined\n        this.$emit(EVENT_INPUT, this.valid)\n      },\n      msgClickHandler() {\n        this.$emit(EVENT_MSG_CLICK)\n      },\n      findMessage (key, config, type, val) {\n        const messages = this.$cubeMessages\n        const lang = this.$cubeLang\n        const NAMESPACE = 'validator'\n        const target = messages[lang][NAMESPACE][key]\n        if (!target) {\n          return ''\n        }\n        if (isString(target)) {\n          return target\n        } else if (isFunc(target)) {\n          return target(config)\n        } else {\n          if (!target[type]) {\n            type = isArray(val) ? 'array' : typeof val\n          }\n          return typeof target[type] === 'function' ? target[type](config) : template(target[type], config)\n        }\n      }\n    }\n  }\n</script>\n\n<style lang=\"stylus\">\n  @require \"../../common/stylus/variable.styl\"\n\n  .cube-validator\n    .cube-checkbox, .cube-radio\n      color: inherit\n    .cube-input\n      input\n        color: inherit\n    .cube-textarea\n      color: inherit\n    .cube-select\n      color: inherit\n  .cube-validator-msg-def\n    font-size: $fontsize-medium\n    color: $validator-msg-def-color\n</style>\n"]}]}